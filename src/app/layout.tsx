import { authOptions } from "@/app/api/auth/[...nextauth]/authOptions";
import { getSessionUser } from "@/app/api/user/getSessionUser";
import PersistentDrawerLeft from "@/app/InnerLayout";
import prisma from "@/app/prisma/client";
import { WithOrganisation } from "@/app/WithOrganisation";
import { WithSession } from "@/app/WithSession";
import { WithUser } from "@/app/WithUser";
import theme from "@/theme";
import { CssBaseline } from "@mui/material";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v13-appRouter";
import { ThemeProvider } from "@mui/material/styles";
import type { Metadata } from "next";
import { getServerSession } from "next-auth";
import { Inter } from "next/font/google";
import * as React from "react";
import { PropsWithChildren } from "react";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }: PropsWithChildren) {
  const session = await getServerSession(authOptions);
  const user = await getSessionUser();

  return (
    <html lang="ru">
      <body className={inter.className}>
        <WithSession session={session}>
          <AppRouterCacheProvider>
            <CssBaseline />
            <ThemeProvider theme={theme}>
              {session && user ? (
                <WithOrganisation>
                  <WithUser initialData={user}>
                    <PersistentDrawerLeft>{children}</PersistentDrawerLeft>
                  </WithUser>
                </WithOrganisation>
              ) : (
                children
              )}
            </ThemeProvider>
          </AppRouterCacheProvider>
        </WithSession>
      </body>
    </html>
  );
}